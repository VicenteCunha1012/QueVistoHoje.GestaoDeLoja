@page "/"
@using Microsoft.EntityFrameworkCore
@using QueVistoHoje.GestaoDeLoja.Data.Entities
@using Microsoft.AspNetCore.Identity
@using QueVistoHoje.GestaoDeLoja.Data
@inject IDbContextFactory<QueVistoHoje.GestaoDeLoja.Data.ApplicationDbContext> DbFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Home</PageTitle>

<h1>Bem-vindo ao Que Visto Hoje!</h1>

<p>Está na aplicação de Gestão da Loja</p>

<div class="container">
    <div class="row">
        @if (CanViewInfo)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><a href="/produtos">Produtos</a></h5>
                        <p class="card-text">Número de Produtos: @NumeroProdutos</p>
                        <a href="/produtos/create" class="btn btn-primary">Adicionar Produto</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-6 mb-4">
               <div class="card">
                    <div class="card-body">
                      <h5 class="card-title">Produtos</h5>
                        <p>@CantViewError</p>
                 </div>
               </div>
            </div>
        }
        @if (CanViewInfo)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                <div class="card-body">
                    <h5 class="card-title"><a href="/categoria">Categorias</a></h5>
                    <p class="card-text">Número de Categorias: @NumeroCategorias</p>
                    <a href="/categoria/create" class="btn btn-primary">Adicionar Categoria</a>
                </div>
            </div>
        </div>
        }
        else
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Categorias</h5>
                        <p>@CantViewError</p>
                    </div>
                </div>
            </div>
        }
        @if(CanViewInfo)
        {

            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><a href="/empresas">Empresas</a></h5>
                        <p class="card-text">Número de Empresas: @NumeroEmpresas</p>
                        <a href="/empresas/create" class="btn btn-primary">Adicionar Empresa</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Empresas</h5>
                        <p>@CantViewError</p>
                    </div>
                </div>
            </div>
        }
        @if(CanViewInfo)
        {

        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title"><a href="/encomenda">Encomendas</a></h5>
                    <p class="card-text">Número de Encomendas: @NumeroEncomendas</p>
                    <a href="/encomenda/create" class="btn btn-primary">Adicionar Encomenda</a>
                </div>
            </div>
        </div>
        }
        else
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Encomendas</h5>
                        <p>@CantViewError</p>
                    </div>
                </div>
            </div>
        }
        
    </div>
</div>

@code {
    private int NumeroProdutos { get; set; }
    private int NumeroCategorias { get; set; }
    private int NumeroEmpresas { get; set; }
    private int NumeroEncomendas { get; set; }
    private bool CanViewInfo { get; set; }
    private bool IsAdmin { get; set; }

    private String CantViewError = "Faça login como funcionário ou administrador para aceder esta informação";

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        NumeroProdutos = await context.Produtos.CountAsync();
        NumeroCategorias = await context.Categorias.CountAsync();
        NumeroEmpresas = await context.Empresas.CountAsync();
        NumeroEncomendas = await context.Encomendas.CountAsync();

        CanViewInfo = await CheckUserRole();
        IsAdmin = await CheckIsAdmin();
    }
    private async Task<bool> CheckIsAdmin()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if (appUser != null)
            {
                var roles = await UserManager.GetRolesAsync(appUser);
                return roles.Contains("Administrador");
            }
        }
        return false;
    }    

       private async Task<bool> CheckUserRole()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

          if(user.Identity != null && user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            if(appUser != null)
            {
                var roles = await UserManager.GetRolesAsync(appUser);
                  return roles.Contains("Administrador") || roles.Contains("Funcionário");
            }
         }
       return false;
    }
}